syntax = "proto3";

service Serializer {
  rpc Teste(SerialData) returns (SerialData) {}
  rpc Discovery(SerialData) returns (SerialData) {}
  rpc Estimation(SerialData) returns (SerialData) {}
  rpc Refutation(SerialData) returns (SerialData) {}
  rpc Graphs(SerialData) returns (SerialData) {}

  rpc Dataset(SerialData) returns (SerialData) {}
  rpc handle_missing_data(SerialData) returns (SerialData) {}
  rpc FeatureTypeMap(SerialData) returns (SerialData) {}
  rpc estimate_feature_importances(SerialData) returns (SerialData) {}
  rpc applyable_models(SerialData) returns (SerialData) {}
  rpc discover_with_all_models(SerialData) returns (SerialData) {}
  rpc discover_with_model(SerialData) returns (SerialData) {}
  rpc estimate_all_effects(SerialData) returns (SerialData) {}
  rpc estimate_model_effects(SerialData) returns (SerialData) {}
  rpc refute_all_results(SerialData) returns (SerialData) {}
  rpc refute_estimation(SerialData) returns (SerialData) {}
  rpc generate_result_graph(SerialData) returns (SerialData) {}
  rpc generate_all_results(SerialData) returns (SerialData) {}
  rpc parse_knowledge_file(SerialData) returns (SerialData) {}
}

message SerialData {
  bytes data = 1;
  string errorMessage = 2;
}
